{"version":3,"sources":["pages/chat/chat.js","pages/login/login.js","App.js","index.js"],"names":["socket","Login","useState","name","setName","room","setRoom","className","method","onChange","e","target","value","type","placeholder","required","onClick","preventDefault","to","Chat","user","setUser","users","setUsers","message","setMessage","messages","setMessages","socketUrl","useEffect","search","window","location","params","URLSearchParams","get","io","emit","err","disconnect","off","on","msg","prevMsg","setTimeout","div","document","getElementById","scrollTop","scrollHeight","clientWidth","usrs","id","map","i","toLowerCase","text","onKeyPress","event","key","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"sMAIIA,E,qFC2BWC,EA3BD,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKC,UAAU,sBAAf,UAEI,oBAAIA,UAAU,WAAd,mBACA,uBAAMC,OAAO,OAAb,UACI,qBAAKD,UAAU,aAAf,SACI,uBACIE,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOC,QAClCC,KAAK,OAAOC,YAAY,WAAWC,UAAQ,EAACR,UAAU,8BAE9D,qBAAKA,UAAU,aAAf,SACI,uBACIE,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOC,QAClCC,KAAK,OAAOC,YAAY,OAAOC,UAAQ,EAACR,UAAU,8BAE1D,cAAC,IAAD,CAAMS,QAAS,SAAAN,GAAC,OAAMP,GAASE,EAA6B,KAArBK,EAAEO,kBACrCC,GAAE,qBAAgBf,EAAhB,iBAA6BE,GADnC,SAEI,uBAAOQ,KAAK,SAASN,UAAU,cAAcK,MAAM,oB,gBD+GxDO,G,MAlIF,WACT,MAAwBjB,mBAAS,IAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAwBnB,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAA8BrB,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAAgCvB,mBAAS,IAAzC,mBAAOwB,EAAP,KAAiBC,EAAjB,KACMC,EAAY,wBAElBC,qBAAU,WACN,IAAMC,EAASC,OAAOC,SAASF,OACzBG,EAAS,IAAIC,gBAAgBJ,GAC7BV,EAAOa,EAAOE,IAAI,QAClB9B,EAAO4B,EAAOE,IAAI,QAexB,OAbAd,EAAQD,GACRd,EAAQD,IAERL,EAASoC,YAAGR,IAILS,KAAK,OAAQ,CAAEjB,OAAMf,SAAQ,SAACiC,OAM9B,WAEHtC,EAAOuC,aAEPvC,EAAOwC,SAGZ,CAACZ,EAAUG,OAAOC,SAASF,SAE9BD,qBAAU,WACN7B,EAAOyC,GAAG,WAAW,SAAAC,GACjBf,GAAY,SAAAgB,GAAO,4BAAQA,GAAR,CAAiBD,OAEpCE,YAAW,WAEP,IAAIC,EAAMC,SAASC,eAAe,aAClCF,EAAIG,UAAYH,EAAII,aAAeJ,EAAIK,cACxC,OAGPlD,EAAOyC,GAAG,eAAe,SAAAU,GACrB5B,EAAS4B,QAEd,IAYH,OACI,qBAAK5C,UAAU,kBAAf,SAEI,sBAAKA,UAAU,kBAAkB6C,GAAG,gBAApC,UACI,sBAAK7C,UAAU,oBAAf,UACI,qBAAKA,UAAU,wBAAf,SACA,gDAGA,6BAEQe,EAAM+B,KAAI,SAAC3C,EAAG4C,GAAJ,OACN,6BAAa5C,EAAEU,MAANkC,WAKzB,qBAAK/C,UAAU,oBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,qBAAIA,UAAU,cAAd,UAA4B,sBAAMA,UAAU,gCAAsCF,SAI1F,qBAAKE,UAAU,gCAAgC6C,GAAG,YAAlD,SAEQ1B,EAAS2B,KAAI,SAAC3C,EAAG4C,GAAJ,OACT5C,EAAEU,QAAF,OAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAMmC,eAAgB,mCAC7B,qBAAahD,UAAU,iCAAvB,SACI,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,4BAAIG,EAAE8C,OACN,+BAAO9C,EAAEU,aAJXkC,KAQR,mCACF,qBAAa/C,UAAU,8BAAvB,SACI,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,4BAAIG,EAAE8C,OACN,+BAAO9C,EAAEU,aAJXkC,UAa1B,qBAAK/C,UAAU,eAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBAAO6C,GAAG,YAAYvC,KAAK,OACvBD,MAAOY,EACPiC,WAAY,SAAAC,GAAK,MAAkB,UAAdA,EAAMC,KAA8BD,EAhEnFzC,iBAEFjB,EAAOqC,KAAK,cAAeb,GAAS,kBAAMC,EAAW,YACrDmB,YAAW,WACP,IAAIC,EAAMC,SAASC,eAAe,aAClCF,EAAIG,UAAYH,EAAII,eACrB,MA0D2F,MAClExC,SAAU,SAACiD,GAAD,OAAWjC,EAAWiC,EAAM/C,OAAOC,QAC7CL,UAAU,mCAAmCO,YAAY,+CE9G9E8C,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9D,IACjC,cAAC,IAAD,CAAO4D,KAAK,QAAQE,UAAW5C,QCHrC6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,W","file":"static/js/main.257160e9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport './chat.css'\n\nlet socket;\nconst Chat = () => {\n    const [user, setUser] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const socketUrl = 'http://localhost:8000'\n\n    useEffect(() => {\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const user = params.get('name');\n        const room = params.get('room');\n\n        setUser(user)\n        setRoom(room)\n\n        socket = io(socketUrl);\n\n\n\n        socket.emit('join', { user, room }, (err) => {\n            if (err) {\n                // alert(err)\n            }\n        })\n\n        return () => {\n            // User leaves room\n            socket.disconnect();\n\n            socket.off()\n        }\n\n    }, [socketUrl,window.location.search])\n\n    useEffect(() => {\n        socket.on('message', msg => {\n            setMessages(prevMsg => [...prevMsg, msg])\n\n            setTimeout(() => {\n\n                var div = document.getElementById(\"chat_body\");\n                div.scrollTop = div.scrollHeight - div.clientWidth;\n            }, 10)\n        })\n\n        socket.on('roomMembers', usrs => {\n            setUsers(usrs)\n        })\n    }, [])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n       \n        socket.emit('sendMessage', message, () => setMessage(\"\"))\n        setTimeout(() => {\n            var div = document.getElementById(\"chat_body\");\n            div.scrollTop = div.scrollHeight ;\n        }, 100)\n    }\n\n    return (\n        <div className=\"container mt-4 \">\n\n            <div className=\"row chat-window\" id=\"chat_window_1\" >\n                <div className=\"col-xs-4 col-md-4\">\n                    <div className=\"panel-heading top-bar\">\n                    <h5>ACTIVE USERS</h5>\n                    </div>\n                    \n                    <ul>\n                        {\n                            users.map((e, i) => (\n                                <li key={i}>{e.user}</li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <div className=\"col-xs-8 col-md-8\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading top-bar\">\n                            <div className=\"col-md-12 col-xs-8\">\n                                <h3 className=\"panel-title\"><span className=\"glyphicon glyphicon-comment\"></span>{room}</h3>\n                            </div>\n\n                        </div>\n                        <div className=\"panel-body msg_container_base\" id=\"chat_body\">\n                            {\n                                messages.map((e, i) => (\n                                    e.user === user?.toLowerCase() ? <>\n                                        <div key={i} className=\"row msg_container base_receive\">\n                                            <div className=\"col-xs-10 col-md-10\">\n                                                <div className=\"messages msg_receive\">\n                                                    <p>{e.text}</p>\n                                                    <time>{e.user}</time>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </> : <>\n                                        <div key={i} className=\"row msg_container base_sent\">\n                                            <div className=\"col-xs-10 col-md-10\">\n                                                <div className=\"messages msg_sent\">\n                                                    <p>{e.text}</p>\n                                                    <time>{e.user}</time>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </>\n                                ))\n                            }\n\n                        </div>\n                        <div className=\"panel-footer\">\n                            <div className=\"input-group\">\n                                <input id=\"btn-input\" type=\"text\"\n                                    value={message}\n                                    onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n                                    onChange={(event) => setMessage(event.target.value)}\n                                    className=\"form-control input-sm chat_input\" placeholder=\"Write your message here...\" />\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;","import React, { useState } from 'react'\nimport './login.css'\nimport { Link } from 'react-router-dom'\n\nconst Login = () => {\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    return (\n        <div className=\"container w-25 mt-5\">\n            \n            <h1 className=\"login-h1\">Login</h1>\n            <form method=\"post\">\n                <div className=\"form-group\">\n                    <input\n                        onChange={(e) => setName(e.target.value)}\n                        type=\"text\" placeholder=\"Username\" required className=\"form-control form-input\" />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        onChange={(e) => setRoom(e.target.value)}\n                        type=\"text\" placeholder=\"Room\" required className=\"form-control form-input\" />\n                </div>\n                <Link onClick={e => (!name || !room) ? e.preventDefault() : null}\n                    to={`/chat?name=${name}&room=${room}`}>\n                    <input type=\"submit\" className=\"form-submit\" value=\"Log In\" />\n                </Link>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import './App.css';\nimport {BrowserRouter as Router , Route} from 'react-router-dom'\nimport Login from './pages/login/login';\nimport Chat from './pages/chat/chat';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Login} />\n      <Route path=\"/chat\" component={Chat} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}